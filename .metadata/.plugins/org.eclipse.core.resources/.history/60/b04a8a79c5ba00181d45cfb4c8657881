package kieker.extention;

import java.net.InetAddress;
import java.net.UnknownHostException;

import kieker.monitoring.core.controller.IMonitoringController;
import kieker.monitoring.core.controller.MonitoringController;

public final class MonitoringFactory {
	
	public static IMonitoringController getMonitoringController() {
		final IMonitoringController MONITORING_CONTROLLER = MonitoringController.getInstance();
	    return 	MONITORING_CONTROLLER;
	}
	
	public static CustomizedResponseTimeRecord  getInternalActionRecord(long id, long tin, long tout) {
		return new CustomizedResponseTimeRecord(traceID,
				threadID, 
				startTime,
				endTime,
				loopNumber,
				sessionID,
				hostName, 
				positionID, 
				serviceParameters, 
				serviceReturnValue, 
				isBranchExecuted);
	}
	
	public static CustomizedResponseTimeRecord  getLoopActionRecord(long id, long loopNumber) {
		return null;
	}
	
	public static CustomizedResponseTimeRecord  getBranchActionRecord(long id, long isBranchExecuted) {
		return null;
	}
	
	public static CustomizedResponseTimeRecord  getOperationRecord(long id, long tin, long tout, String parameters,
			String returnValue) {
		return null;
	}
	
	private static String getHostName() {
		try {
			String hostName = InetAddress.getLocalHost().getHostName();
			return hostName;
		} catch (UnknownHostException e) {
			return CustomizedResponseTimeRecord.NO_HOSTNAME;
		}
	}
	
	private static long getThreadID() {
		long threadId = Thread.currentThread().getId();
		return threadId;
	}
	
	private static String getSessionID() {
		return null;
	}
	

}
